#include "stateMachines.h"
#include "led.h"
#include "switches.h"

typedef enum {
  STATE_OFF, STATE_RED, STATE_GREEN, STATE_TOGGLE
} State;

static State current_state = STATE_OFF;
static unsigned int toggle_count = 0;

extern unsigned char ledFlags;

void state_advance() {

  unsigned char buttons = switch_state_down;

  switch(current_state) {

  case STATE_OFF:
    led_off(LEDS);

    if (buttons & SW1)
      current_state = STATE_RED;
    else if (buttons & SW2)
      current_state = STATE_GREEN;
    else if (buttons & SW3)
      current_state = STATE_TOGGLE;
    break;

  case STATE_RED:
    led_on(LED_RED);
    led_off(LED_GREEN);

    if (!buttons)
      current_state = STATE_OFF;
    break;

  case STATE_GREEN:
    led_off(LED_RED);
    led_on(LED_GREEN);

    if (!buttons)
      current_state = STATE_OFF;
    break;

  case STATE_TOGGLE:
    if (toggle_count == 250) {
      toggle_count = 0;
      ledFlags ^= LEDS;
    }
    toggle_count++;
    break;

  default:
    break;
  }
}
